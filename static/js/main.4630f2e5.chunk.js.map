{"version":3,"sources":["services/api.js","App/App.styled.js","Components/Searchbar/Searchbar.styled.js","Components/Searchbar/Searchbar.jsx","Components/ImageGallery/ImageGallery.styled.js","Components/ImageGallery/ImageGallery.jsx","Components/ImageGalleryItem/ImageGalleryItem.styled.js","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/Button/Button.styled.js","Components/Button/Button.jsx","Components/Loader/Loader.styled.js","Components/Loader/Loader.jsx","Components/Modal/Modal.styled.js","Components/Modal/Modal.jsx","App/App.js","index.js"],"names":["axios","defaults","baseURL","params","image_type","key","fetchImages","imageName","page","a","get","q","response","data","hits","Container","styled","div","Searchform","form","Searchbtn","button","Searchlabel","span","Searchinput","input","Searchbarh","header","Searchbar","onSearch","onSubmit","event","preventDefault","target","elements","value","type","name","autoComplete","autoFocus","placeholder","Gallery","ul","ImageGallery","children","Item","li","Image","img","ImageGalleryItem","images","selectedImg","toggleModal","map","image","src","webformatURL","alt","largeImageURL","onClick","id","Loadbutton","Button","propType","PropTypes","func","Loaderbtn","Spinner","color","height","width","timeout","Overlay","Modalstyle","Modal","largeImg","useEffect","handleEscClick","code","window","addEventListener","removeEventListener","currentTarget","Status","App","useState","setImageName","setImages","status","setStatus","setPage","showModal","setShowModal","largeUrl","setLargeUrl","then","res","length","toast","error","prevState","scrollTo","top","document","documentElement","scrollHeight","behavior","trim","showLoader","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4630f2e5.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api'\r\nconst API_KEY = '22629706-2b1c8bc2d7db5f907a7256f2f'\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  image_type: 'photo',\r\n  key: API_KEY,\r\n}\r\nexport const fetchImages = async (imageName, page) => {\r\n  const response = await axios.get('', {\r\n    params: {\r\n      page,\r\n      q: imageName\r\n    }\r\n  });\r\n  return response.data.hits;\r\n};\r\n\r\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding-bottom: 24px;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n`;","import styled from '@emotion/styled';\n\nexport const Searchform = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: white;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const Searchbtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  cursor: pointer;\n  outline: none;\n`;\nexport const Searchlabel = styled.span`\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n`;\nexport const Searchinput = styled.input`\n  padding: 0 4px;\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\nexport const Searchbarh = styled.header`\n  padding: 12px 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  position: sticky;\n  min-height: 64px;\n  color: white;\n  background-color: blue;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Searchform,\n  Searchbtn,\n  Searchlabel,\n  Searchinput,\n  Searchbarh,\n} from './Searchbar.styled';\n\nexport const Searchbar = ({ onSearch }) => {\n  const handleSearch = event => {\n    event.preventDefault();\n    onSearch(event.target.elements.imageName.value);\n  };\n\n  return (\n    <Searchbarh>\n      <Searchform onSubmit={handleSearch}>\n        <Searchbtn type=\"submit\">\n          <Searchlabel>Search</Searchlabel>\n        </Searchbtn>\n\n        <Searchinput\n          type=\"text\"\n          name=\"imageName\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </Searchform>\n    </Searchbarh>\n  );\n};\nSearchbar.propTypes = {\n  onSearch: PropTypes.func,\n};","import styled from '@emotion/styled';\n\nexport const Gallery = styled.ul`\n  margin: 0 auto;\n  padding: 0;\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  list-style: none;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Gallery } from './ImageGallery.styled';\n\nexport default function ImageGallery({ children }) {\n  return <Gallery>{children}</Gallery>;\n}\n\nImageGallery.propTypes = {\n  children: PropTypes.object,\n};","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n\n`;\nexport const Image = styled.img`\n  display: block;\n  cursor: pointer;\n\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Item, Image } from './ImageGalleryItem.styled';\n\nexport default function ImageGalleryItem({ images, selectedImg, toggleModal }) {\n  const handleSelectedImg = value => {\n    selectedImg(value);\n    toggleModal();\n  };\n\n  return images.map(image => (\n    <Item key={image.id}>\n      <Image\n        src={image.webformatURL}\n        alt=\"\"\n        data-src={image.largeImageURL}\n        onClick={() => handleSelectedImg(image.largeImageURL)}\n      />\n    </Item>\n  ));\n}\n\nImageGalleryItem.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n  selectedImg: PropTypes.func,\n  toggleModal: PropTypes.func,\n};","import styled from '@emotion/styled';\n\nexport const Loadbutton = styled.button`\n  margin: 0 auto;\n  padding: 8px 16px;\n  display: inline-block;\n  min-width: 180px;\n  text-align: center;\n  text-decoration: none;\n  font-family: inherit;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 24px;\n  border: 0;\n  border-radius: 5px;\n  background-color: blue;\n  color: white;\n  cursor: pointer;\n`;","import PropTypes from 'prop-types';\nimport { Loadbutton } from './Button.styled';\n\nexport function Button({ onClick }) {\n  return (\n    <Loadbutton type=\"button\" onClick={onClick}>\n      Load more\n    </Loadbutton>\n  );\n}\n\nButton.propType = {\n  onClick: PropTypes.func,\n};","\r\nimport styled from '@emotion/styled';\r\n\r\nexport const Loaderbtn = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;","import Loader from 'react-loader-spinner';\r\nimport { Loaderbtn } from './Loader.styled';\r\n\r\nexport const Spinner = () => {\r\n  return (\r\n    <Loaderbtn>\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#4a0e4e\"\r\n        height={90}\r\n        width={90}\r\n        timeout={3000}\r\n      />\r\n    </Loaderbtn>\r\n  );\r\n};","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const Modalstyle = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Overlay, Modalstyle } from './Modal.styled';\n\nexport default function Modal({ largeImg, toggleModal }) {\n  useEffect(() => {\n    const handleEscClick = event => {\n      if (event.code === 'Escape') {\n        toggleModal();\n      }\n    };\n    window.addEventListener('keydown', handleEscClick);\n    return () => {\n      window.removeEventListener('keydown', handleEscClick);\n    };\n  }, [toggleModal]);\n\n  const handleOverlayClick = event => {\n    if (event.target === event.currentTarget) {\n      toggleModal();\n    }\n  };\n\n  return (\n    <Overlay onClick={handleOverlayClick}>\n      <Modalstyle>\n        <img src={largeImg} alt=\"\" />\n      </Modalstyle>\n    </Overlay>\n  );\n}\n\nModal.propTypes = {\n  largeImg: PropTypes.string,\n  toggleModal: PropTypes.func,\n};","import { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { fetchImages } from '../services/api';\nimport { Container } from './App.styled';\nimport { Searchbar } from '../Components/Searchbar/Searchbar';\nimport ImageGallery from '../Components/ImageGallery/ImageGallery';\nimport ImageGalleryItem from '../Components/ImageGalleryItem/ImageGalleryItem';\nimport { Button } from '../Components/Button/Button';\nimport { Spinner } from '../Components/Loader/Loader';\nimport Modal from '../Components/Modal/Modal';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default function App() {\n  const [imageName, setImageName] = useState(null);\n  const [images, setImages] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [largeUrl, setLargeUrl] = useState('');\n\n  useEffect(() => {\n    if (!imageName) {\n      return;\n    }\n\n    try {\n      setStatus(Status.IDLE);\n      fetchImages(imageName, page).then(res => {\n        if (res.length === 0) {\n          return toast.error('No matches found');\n        }\n        setImages(prevState => [...prevState, ...res]);\n        setStatus(Status.RESOLVED);\n      });\n    } catch (error) {\n      setStatus(Status.REJECTED);\n      toast.error('Error');\n    }\n\n    page > 1 &&\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n  }, [imageName, page]);\n\n  const handleFormSubmit = value => {\n    if (imageName === value) {\n      toast('Your request has already been completed, please enter a new one');\n      return;\n    }\n    if (value.trim() === '') {\n      setStatus(Status.IDLE);\n      return toast.error('Please enter your search data');\n    }\n\n    setImages([]);\n    setImageName(value);\n    setPage(1);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return (\n    <Container>\n      <Searchbar onSearch={handleFormSubmit} />\n      {status === 'pending' && <Spinner />}\n      <ImageGallery>\n        <ImageGalleryItem\n          images={images}\n          toggleModal={toggleModal}\n          selectedImg={data => setLargeUrl(data)}\n        />\n      </ImageGallery>\n      {images.length > 11 && <Button onClick={() => setPage(page + 1)} />}\n\n      {showModal && (\n        <Modal\n          largeImg={largeUrl}\n          showLoader={showModal}\n          toggleModal={toggleModal}\n        />\n      )}\n      <ToastContainer autoClose={3000} />\n    </Container>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App  from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}